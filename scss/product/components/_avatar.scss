///Avatars
//sm
//md
//lg
//xl
//xxl


.avatar {
	width: 2rem;
	height: 2rem;
	line-height: 2rem;
	border-radius: 50%;
	display: inline-block;
	background: $gray-400 no-repeat center/cover;
	position: relative;
	text-align: center;
	color: $gray-600;
	font-weight: 600;
	vertical-align: bottom;
	font-size: .875rem;
	user-select: none;

	i {
		font-size: 125%;
		vertical-align: sub;
	}
}

.avatar-square{
	border-radius: 0;
	background: transparent;
	&.avatar-curved{
		border-radius: 4px;
	}
	&.avatar-w_shadow{
		box-shadow: $avatar-box-shadow;
	}
}

.avatar-sm {
	width: 1.5rem;
	height: 1.5rem;
	line-height: 1.5rem;
	font-size: .75rem;
}

.avatar-md {
	width: 2.3rem;
	height: 2.3rem;
	line-height: 2.3rem;
	font-size: 1rem;
}

.avatar-lg {
	width: 3rem;
	height: 3rem;
	line-height: 3rem;
	font-size: 1.25rem;
}

.avatar-xl {
	width: 4rem;
	height: 4rem;
	line-height: 4rem;
	font-size: 1.75rem;
}

.avatar-xxl {
	width: 5rem;
	height: 5rem;
	line-height: 5rem;
	font-size: 2rem;
}

@each $vendor, $color in $colors {
	.avatar-#{$vendor} {
		background-color: $color;
		color: color-yiq($color);

		// Adding progress color indicator for progress avatar
		&.progress-avatar{
			.progress-avatar-bar {
				@include progress-avatar-variant($color);
			}
		}
	}
}


// Progress avatar

.progress-avatar {
  width: $progress-avatar-size;
  height: $progress-avatar-size;
  background: none;
  margin: 0 auto;
  box-shadow: none;
  position: relative;
  &:after {
    content: "";
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: $progress-avatar-width solid $progress-avatar-border-color;
    position: absolute;
    top: 0;
    left: 0;
  }
  > span {
    width: 50%;
    height: 100%;
    overflow: hidden;
    position: absolute;
    top: 0;
    z-index: 1;
  }
  .progress-avatar-left {
    left: 0;
  }
  .progress-avatar-bar {
    width: 100%;
    height: 100%;
    background: none;
    border-width: $progress-avatar-width;
    border-style: solid;
    position: absolute;
	top: 0;
  }
  .progress-avatar-left .progress-avatar-bar {
    left: 100%;
    border-top-right-radius: ($progress-avatar-size/2);;
    border-bottom-right-radius: ($progress-avatar-size/2);;
    border-left: 0;
    -webkit-transform-origin: center left;
    transform-origin: center left;
    //animation: loading-2 1.5s linear forwards 1.8s;
  }
  .progress-avatar-right {
    right: 0;
    .progress-avatar-bar {
      left: -100%;
      border-top-left-radius: ($progress-avatar-size/2);;
      border-bottom-left-radius: ($progress-avatar-size/2);;
      border-right: 0;
      -webkit-transform-origin: center right;
      transform-origin: center right;
      //animation: loading-1 1.8s linear forwards;
    }
  }
  .progress-avatar-value {
    display: flex;
    border-radius: 50%;
    font-size: 36px;
    text-align: center;
    line-height: 20px;
    align-items: center;
    justify-content: center;
    height: 100%;
    //font-family: $work-sans;
    font-weight: 300;
    div {
      margin-top: 10px;
    }
    span {
      font-size: 12px;
      text-transform: uppercase;
    }
  }
  .avatar-label{
	top: 3px;
	right: 3px;
	bottom: 3px;
	left: 3px;
	width: auto;
	height: auto;
	position: absolute;
	line-height: 25px;
	background: $progress-avatar-border-color;
	color: $progress-avatar-label-color;
	border-radius: 50%;
  }
}

/* This for loop creates the 	necessary css animation names 
Due to the split circle of progress-left and progress right, we must use the animations on each side. 
*/
@for $i from 1 through $progress-steps {
	$stepName: ($i*(100 / $progress-steps));

	//animation only the left side if below 50%
	@if $i <= ($progress-steps/2) { 
		.progress-avatar[data-percentage="#{$stepName}"] {
			.progress-avatar-right .progress-avatar-bar {
				 animation: loading-#{$i} $animationTime linear forwards;
			}
			.progress-avatar-left .progress-avatar-bar {animation: 0;}
		}
	}
	//animation only the right side if above 50%
	@if $i > ($progress-steps/2)  {  
		.progress-avatar[data-percentage="#{$stepName}"] {
			.progress-avatar-right .progress-avatar-bar {
				animation: loading-#{($progress-steps/2)} $animationTime linear forwards; //set the animation to longest animation
			}
			.progress-avatar-left .progress-avatar-bar {
      animation: loading-#{$i - ($progress-steps/2)} $animationTime linear forwards $animationTime;
    }
		}
	}
}

//animation
@for $i from 1 through ($progress-steps/2) { 
	$degrees: (180/($progress-steps/2));
	$degrees: ($degrees*$i);
	@keyframes loading-#{$i}{
    0%{
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100%{
        -webkit-transform: rotate($degrees);
			transform: rotate(#{$degrees}deg);
    }
	}
}


//avatar groups

.avatar-group{
  display: flex;
  align-items: center;
  .avatar{
		cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    border:2px solid $avatar-group-avatar-border;
		position: relative;
		margin-left: -7px;
		@include avatar-z-index(30);
  }
}